{"version":3,"file":"static/js/83.96eb01d2.chunk.js","mappings":"8NAGaA,EAAaC,EAAAA,GAAAA,GAAH,kFAMVC,GAAaD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,sH,sJCHhB,SAASG,EAAT,GAAsC,IAAVC,EAAS,EAATA,MACjC,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAEMC,GAAWC,EAAAA,EAAAA,MAgBjB,IAdAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,WAAyBN,GAAzB,0EACOA,EADP,uBAEIG,EAAU,IAFd,2CAMqBI,EAAAA,EAAAA,IAAmBP,GANxC,OAMQQ,EANR,OAOEL,EAAUK,GAPZ,2CADc,yBAAC,SAAD,2BAWdC,CAAUT,EACX,GAAE,CAACE,EAAOQ,OAAQV,IAEdE,EAAOQ,OAEZ,OACE,+BACE,SAAC,IAAD,UACGR,EAAOS,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACV,2BACE,SAAC,IAAD,CAAYC,MAAO,CAAEC,KAAMX,GAAYY,GAAE,kBAAaJ,GAAtD,SACGC,KAFMD,EADD,OAUnB,C,YCpCM,SAASK,IAAU,IAAD,EAEvB,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMpB,EAAK,UAAGmB,EAAaE,IAAI,gBAApB,QAAgC,GAY3C,OACE,iCACE,iBAAMC,SAPV,SAAkBC,GAChBA,EAAEC,gBAEH,EAIG,UACE,4BACE,kBACEC,SAfV,SAAsBF,GAEpBH,EAAgB,CAAEpB,MAAOuB,EAAEG,OAAOC,MAAMC,cAAcC,QACvD,EAaSF,MAAO3B,EACP8B,KAAK,OACLC,YAAY,gBACZC,WAAW,SAIjB,SAACjC,EAAD,CAAkBC,MAAOA,MAG9B,C,+LCjCKiC,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EACM,uBADNA,EAES,gBAFTA,EAGU,SAHVA,EAIU,WAJVA,EAKU,WAGT,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,yGAAyBC,EAAzB,+BAAgC,EAAhC,SACaH,EAAAA,EAAAA,IAAA,UACbC,EADa,oBACkBF,EADlB,iBACkCI,EADlC,wCADb,cACCC,EADD,yBAKEA,EAAI9B,KAAK+B,SALX,mEAQA,SAAehC,EAAtB,+CAAO,OAAP,oBAAO,WAAkCP,GAAlC,4FAAyCqC,EAAzC,+BAAgD,EAAhD,SACaH,EAAAA,EAAAA,IAAA,UACbC,EADa,oBACqBF,EADrB,iBACqCI,EADrC,kBACmDrC,EADnD,wCADb,cACCsC,EADD,yBAKEA,EAAI9B,KAAK+B,SALX,mEAQA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAkC5B,GAAlC,uFACasB,EAAAA,EAAAA,IAAA,UACbC,EADa,YACcvB,EADd,oBAC4BqB,EAD5B,oBADb,cACCK,EADD,yBAKEA,EAAI9B,MALN,kEAQA,SAAeiC,EAAtB,+CAAO,OAAP,oBAAO,WAAkC7B,GAAlC,uFACasB,EAAAA,EAAAA,IAAA,iBACNtB,GADM,OACDuB,EADC,oBACkCF,EADlC,oBADb,cACCK,EADD,yBAKEA,EAAI9B,KAAKkC,MALX,kEAQA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAkC/B,GAAlC,4FAAsCyB,EAAtC,+BAA6C,EAA7C,SACaH,EAAAA,EAAAA,IAAA,iBACNtB,GADM,OACDuB,EADC,oBACkCF,EADlC,gCACiEI,IAF9E,cACCC,EADD,yBAKEA,EAAI9B,KAAK+B,SALX,mE","sources":["pages/Home/Home.styled.jsx","components/SearchMoviesList/SearchMoviesList.jsx","pages/Movies/Movies.jsx","service/movieApi.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const MoviesList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n`;\n\nexport const MoviesItem = styled(Link)`\n  text-decoration: none;\n  color: black;\n\n  &:hover,\n  &:focus {\n    color: orange;\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { fetchMoviesByQuery } from 'service/movieApi';\n\nimport { MoviesList, MoviesItem } from '../../pages/Home/Home.styled';\n\nexport function SearchMoviesList({ query }) {\n  const [movies, setMovies] = useState([]);\n\n  const location = useLocation();\n\n  useEffect(() => {\n    async function fetchData(query) {\n      if (!query) {\n        setMovies([]);\n        return;\n      }\n\n      const data = await fetchMoviesByQuery(query);\n      setMovies(data);\n    }\n\n    fetchData(query);\n  }, [movies.length, query]);\n\n  if (!movies.length) return;\n\n  return (\n    <>\n      <MoviesList>\n        {movies.map(({ id, title }) => (\n          <span key={id}>\n            <MoviesItem state={{ from: location }} to={`/movies/${id}`}>\n              {title}\n            </MoviesItem>\n          </span>\n        ))}\n      </MoviesList>\n    </>\n  );\n}\n","// import { useState } from 'react';\nimport { SearchMoviesList } from 'components/SearchMoviesList/SearchMoviesList';\nimport { useSearchParams } from 'react-router-dom';\n\nexport function Movies() {\n  // const [query, setQuery] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n\n  function filterMovies(e) {\n    // setQuery(e.target.value.toLowerCase().trim());\n    setSearchParams({ query: e.target.value.toLowerCase().trim() });\n  }\n\n  function onSubmit(e) {\n    e.preventDefault();\n    // setQuery('');\n  }\n\n  return (\n    <>\n      <form onSubmit={onSubmit}>\n        <label>\n          <input\n            onChange={filterMovies}\n            value={query}\n            type=\"text\"\n            placeholder=\"Search movies\"\n            autoFocus={true}\n          />\n        </label>\n      </form>\n      <SearchMoviesList query={query} />\n    </>\n  );\n}\n","import axios from 'axios';\n\nconst API_KEY = '7f2db20686f1c663c04ed9685ddd85ef';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst END_POINTS = {\n  trending: '/trending/movie/week',\n  querySearch: '/search/movie',\n  movieDetails: '/movie',\n  movieCredits: '/credits',\n  movieReviews: '/reviews',\n};\n\nexport async function getMovies(page = 1) {\n  const res = await axios.get(\n    `${END_POINTS.trending}?api_key=${API_KEY}&page=${page}&language=en-US&include_adult=false`\n  );\n\n  return res.data.results;\n}\n\nexport async function fetchMoviesByQuery(query, page = 1) {\n  const res = await axios.get(\n    `${END_POINTS.querySearch}?api_key=${API_KEY}&page=${page}&query=${query}&language=en-US&include_adult=false`\n  );\n\n  return res.data.results;\n}\n\nexport async function fetchMoviesDetails(id) {\n  const res = await axios.get(\n    `${END_POINTS.movieDetails}/${id}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return res.data;\n}\n\nexport async function fetchMoviesCredits(id) {\n  const res = await axios.get(\n    `/movie/${id}${END_POINTS.movieCredits}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return res.data.cast;\n}\n\nexport async function fetchMoviesReviews(id, page = 1) {\n  const res = await axios.get(\n    `/movie/${id}${END_POINTS.movieReviews}?api_key=${API_KEY}&language=en-US&page=${page}`\n  );\n\n  return res.data.results;\n}\n"],"names":["MoviesList","styled","MoviesItem","Link","SearchMoviesList","query","useState","movies","setMovies","location","useLocation","useEffect","fetchMoviesByQuery","data","fetchData","length","map","id","title","state","from","to","Movies","useSearchParams","searchParams","setSearchParams","get","onSubmit","e","preventDefault","onChange","target","value","toLowerCase","trim","type","placeholder","autoFocus","API_KEY","axios","END_POINTS","getMovies","page","res","results","fetchMoviesDetails","fetchMoviesCredits","cast","fetchMoviesReviews"],"sourceRoot":""}