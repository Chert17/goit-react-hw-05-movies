{"version":3,"file":"static/js/589.db0bb14f.chunk.js","mappings":"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","sources":["components/MovieList/MovieList.styled.jsx","components/MovieList/SearchMovieList.jsx","pages/MoviesPage/MoviesPage.styled.jsx","pages/MoviesPage/MoviesPage.jsx","service/movieApi.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const MoviesList = styled.ul`\n  padding: 40px;\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n`;\n\nexport const MoviesItem = styled(Link)`\n  text-decoration: none;\n  color: black;\n  &:hover,\n  &:focus {\n    color: orange;\n  }\n`;\n","import { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { fetchMoviesByQuery } from '../../service/movieApi';\n\nimport { MoviesList, MoviesItem } from './MovieList.styled';\n\nexport function SearchMoviesList({ query }) {\n  const [movies, setMovies] = useState([]);\n\n  const location = useLocation();\n\n  useEffect(() => {\n    async function fetchData(query) {\n      if (!query) {\n        setMovies([]);\n        return;\n      }\n\n      const data = await fetchMoviesByQuery(query);\n      setMovies(data);\n    }\n\n    fetchData(query);\n  }, [movies.length, query]);\n\n  if (!movies.length) return;\n\n  return (\n    <>\n      <MoviesList>\n        {movies.map(({ id, title }) => (\n          <span key={id}>\n            <MoviesItem state={{ from: location }} to={`/movies/${id}`}>\n              {title}\n            </MoviesItem>\n          </span>\n        ))}\n      </MoviesList>\n    </>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  padding-top: 20px;\n`;\n\nexport const Label = styled.form`\n  display: flex;\n  justify-content: center;\n`;\n","import { SearchMoviesList } from 'components/MovieList/SearchMovieList';\nimport { useSearchParams } from 'react-router-dom';\n\nimport { Input } from '@mui/material';\nimport { Label, Form } from './MoviesPage.styled';\n\nexport function MoviesPage() {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n\n  function filterMovies(e) {\n    const value = e.target.value.toLowerCase().trim();\n    setSearchParams(value !== '' ? { query: value } : {});\n  }\n\n  return (\n    <>\n      <Form>\n        <Label>\n          <Input\n            onChange={filterMovies}\n            value={query}\n            type=\"text\"\n            placeholder=\"Search movies\"\n            autoFocus={true}\n          />\n        </Label>\n      </Form>\n      <SearchMoviesList query={query} />\n    </>\n  );\n}\n","import axios from 'axios';\n\nconst API_KEY = 'caf7d5dc55fb72336c14ff1053fc599c';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst END_POINTS = {\n  trending: '/trending/movie/week',\n  querySearch: '/search/movie',\n  movieDetails: '/movie',\n  movieCredits: '/credits',\n  movieReviews: '/reviews',\n};\n\nexport async function getMovies(page = 1) {\n  const res = await axios.get(\n    `${END_POINTS.trending}?api_key=${API_KEY}&page=${page}&language=en-US&include_adult=false`\n  );\n\n  return res.data.results;\n}\n\nexport async function fetchMoviesByQuery(query, page = 1) {\n  const res = await axios.get(\n    `${END_POINTS.querySearch}?api_key=${API_KEY}&page=${page}&query=${query}&language=en-US&include_adult=false`\n  );\n\n  return res.data.results;\n}\n\nexport async function fetchMoviesDetails(id) {\n  const res = await axios.get(\n    `${END_POINTS.movieDetails}/${id}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return res.data;\n}\n\nexport async function fetchMoviesCredits(id) {\n  const res = await axios.get(\n    `/movie/${id}${END_POINTS.movieCredits}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return res.data.cast;\n}\n\nexport async function fetchMoviesReviews(id, page = 1) {\n  const res = await axios.get(\n    `/movie/${id}${END_POINTS.movieReviews}?api_key=${API_KEY}&language=en-US&page=${page}`\n  );\n\n  return res.data.results;\n}\n"],"names":["MoviesList","styled","MoviesItem","Link","SearchMoviesList","query","useState","movies","setMovies","location","useLocation","useEffect","fetchMoviesByQuery","data","fetchData","length","map","id","title","state","from","to","Form","Label","MoviesPage","useSearchParams","searchParams","setSearchParams","get","Input","onChange","e","value","target","toLowerCase","trim","type","placeholder","autoFocus","API_KEY","axios","END_POINTS","getMovies","page","res","results","fetchMoviesDetails","fetchMoviesCredits","cast","fetchMoviesReviews"],"sourceRoot":""}