{"version":3,"file":"static/js/139.4a8e1cab.chunk.js","mappings":"+PAGaA,EAASC,EAAAA,GAAAA,OAAH,sGAKNC,EAAUD,EAAAA,GAAAA,GAAH,4EAMPE,GAAUF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,uM,iLCZPI,E,QAAUJ,GAAAA,IAAH,yD,SCKb,SAASK,IAAa,IAAD,EAClBC,GAAYC,EAAAA,EAAAA,MAAZD,QAEFE,GAAO,WADIC,EAAAA,EAAAA,MACKC,aAAT,eAAgBC,OAAQ,UAErC,GAA0BC,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KAYA,IAVAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,WAAyBC,GAAzB,wFACqBC,EAAAA,EAAAA,IAAmBD,GADxC,OACQE,EADR,OAGEJ,EAASI,GAHX,4CADc,uBAAC,SAAD,2BAOdC,CAAUb,EACX,GAAE,CAACA,IAECO,EAAL,CAEA,IAAQO,EAAuDP,EAAvDO,YAAaC,EAA0CR,EAA1CQ,MAAOC,EAAmCT,EAAnCS,aAAcC,EAAqBV,EAArBU,SAAUC,EAAWX,EAAXW,OAEpD,OACE,iCACE,SAAC,KAAD,CAAMC,GAAIjB,EAAV,sBACA,SAACJ,EAAD,WACE,gBACEsB,IAAG,yCAAoCN,GACvCO,IAAKN,OAGT,wBAAKA,KACL,uBAAIC,KACJ,sCACA,uBAAIC,KACJ,oCACA,wBACGC,EAAOI,KAAI,gBAAGZ,EAAH,EAAGA,GAAIa,EAAP,EAAOA,KAAP,OACV,wBAAcA,GAALb,EADC,OAId,mBACA,2BACE,yBACE,SAAC,KAAD,CAASS,GAAI,UAAb,qBAEF,yBACE,SAAC,KAAD,CAASA,GAAI,UAAb,4BA7BU,CAkCnB,CCtDM,SAASK,IACd,OACE,iCACE,SAACzB,EAAD,KACA,SAAC,EAAA0B,SAAD,WACE,SAAC,KAAD,QAIP,C,mMCXKC,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EACM,uBADNA,EAES,gBAFTA,EAGU,SAHVA,EAIU,WAJVA,EAKU,WAGT,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,yGAAyBC,EAAzB,+BAAgC,EAAhC,SACaH,EAAAA,EAAAA,IAAA,UACbC,EADa,oBACkBF,EADlB,iBACkCI,EADlC,wCADb,cACCC,EADD,yBAKEA,EAAInB,KAAKoB,SALX,mEAQA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAkCC,GAAlC,4FAAyCJ,EAAzC,+BAAgD,EAAhD,SACaH,EAAAA,EAAAA,IAAA,UACbC,EADa,oBACqBF,EADrB,iBACqCI,EADrC,kBACmDI,EADnD,wCADb,cACCH,EADD,yBAKEA,EAAInB,KAAKoB,SALX,mEAQA,SAAerB,EAAtB,+CAAO,OAAP,oBAAO,WAAkCD,GAAlC,uFACaiB,EAAAA,EAAAA,IAAA,UACbC,EADa,YACclB,EADd,oBAC4BgB,EAD5B,oBADb,cACCK,EADD,yBAKEA,EAAInB,MALN,kEAQA,SAAeuB,EAAtB,+CAAO,OAAP,oBAAO,WAAkCzB,GAAlC,uFACaiB,EAAAA,EAAAA,IAAA,iBACNjB,GADM,OACDkB,EADC,oBACkCF,EADlC,oBADb,cACCK,EADD,yBAKEA,EAAInB,KAAKwB,MALX,kEAQA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAkC3B,GAAlC,4FAAsCoB,EAAtC,+BAA6C,EAA7C,SACaH,EAAAA,EAAAA,IAAA,iBACNjB,GADM,OACDkB,EADC,oBACkCF,EADlC,gCACiEI,IAF9E,cACCC,EADD,yBAKEA,EAAInB,KAAKoB,SALX,mE","sources":["components/AppBar/AppBar.styled.jsx","components/MovieInfo/MovieInfo.styled.jsx","components/MovieInfo/MovieInfo.jsx","pages/MovieDetails/MovieDetails.jsx","service/movieApi.js"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Header = styled.header`\n  border-bottom: 1px solid #dedede;\n  box-shadow: 0px 15px 10px -15px #111;\n`;\n\nexport const NavList = styled.ul`\n  padding: 0 40px;\n  display: flex;\n  gap: 10px;\n`;\n\nexport const NavItem = styled(NavLink)`\n  padding: 20px;\n  text-decoration: none;\n  color: black;\n  &.active {\n    color: orange;\n  }\n  &:hover:not(.active),\n  &:focus:not(.active) {\n    color: orange;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Wrraper = styled.div`\n  width: 300;\n  height: 300px;\n`;\n","import { useEffect, useState } from 'react';\nimport { Link, useLocation, useParams } from 'react-router-dom';\nimport { fetchMoviesDetails } from '../../service/movieApi';\n\nimport { NavItem } from '../AppBar/AppBar.styled';\nimport { Wrraper } from './MovieInfo.styled';\n\nexport function MovieInfo() {\n  const { movieId } = useParams();\n  const location = useLocation();\n  const href = location.state?.from || '/movies';\n\n  const [movie, setMovie] = useState(null);\n\n  useEffect(() => {\n    async function fetchData(id) {\n      const data = await fetchMoviesDetails(id);\n\n      setMovie(data);\n    }\n\n    fetchData(movieId);\n  }, [movieId]);\n\n  if (!movie) return;\n\n  const { poster_path, title, vote_average, overview, genres } = movie;\n\n  return (\n    <>\n      <Link to={href}>Go back</Link>\n      <Wrraper>\n        <img\n          src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n          alt={title}\n        />\n      </Wrraper>\n      <h2>{title}</h2>\n      <p>{vote_average}</p>\n      <h3>Overview</h3>\n      <p>{overview}</p>\n      <h4>Genres</h4>\n      <ul>\n        {genres.map(({ id, name }) => (\n          <li key={id}>{name}</li>\n        ))}\n      </ul>\n      <hr />\n      <ul>\n        <li>\n          <NavItem to={'credits'}>Cast</NavItem>\n        </li>\n        <li>\n          <NavItem to={'reviews'}>Reviews</NavItem>\n        </li>\n      </ul>\n    </>\n  );\n}\n","import { MovieInfo } from 'components/MovieInfo/MovieInfo';\nimport { Suspense } from 'react';\nimport { Outlet } from 'react-router-dom';\n\nexport function MovieDetails() {\n  return (\n    <>\n      <MovieInfo />\n      <Suspense>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n}\n","import axios from 'axios';\n\nconst API_KEY = 'caf7d5dc55fb72336c14ff1053fc599c';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nconst END_POINTS = {\n  trending: '/trending/movie/week',\n  querySearch: '/search/movie',\n  movieDetails: '/movie',\n  movieCredits: '/credits',\n  movieReviews: '/reviews',\n};\n\nexport async function getMovies(page = 1) {\n  const res = await axios.get(\n    `${END_POINTS.trending}?api_key=${API_KEY}&page=${page}&language=en-US&include_adult=false`\n  );\n\n  return res.data.results;\n}\n\nexport async function fetchMoviesByQuery(query, page = 1) {\n  const res = await axios.get(\n    `${END_POINTS.querySearch}?api_key=${API_KEY}&page=${page}&query=${query}&language=en-US&include_adult=false`\n  );\n\n  return res.data.results;\n}\n\nexport async function fetchMoviesDetails(id) {\n  const res = await axios.get(\n    `${END_POINTS.movieDetails}/${id}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return res.data;\n}\n\nexport async function fetchMoviesCredits(id) {\n  const res = await axios.get(\n    `/movie/${id}${END_POINTS.movieCredits}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return res.data.cast;\n}\n\nexport async function fetchMoviesReviews(id, page = 1) {\n  const res = await axios.get(\n    `/movie/${id}${END_POINTS.movieReviews}?api_key=${API_KEY}&language=en-US&page=${page}`\n  );\n\n  return res.data.results;\n}\n"],"names":["Header","styled","NavList","NavItem","NavLink","Wrraper","MovieInfo","movieId","useParams","href","useLocation","state","from","useState","movie","setMovie","useEffect","id","fetchMoviesDetails","data","fetchData","poster_path","title","vote_average","overview","genres","to","src","alt","map","name","MovieDetails","Suspense","API_KEY","axios","END_POINTS","getMovies","page","res","results","fetchMoviesByQuery","query","fetchMoviesCredits","cast","fetchMoviesReviews"],"sourceRoot":""}